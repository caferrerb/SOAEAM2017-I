<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:dw="http://www.mulesoft.org/schema/mule/ee/dw" xmlns:metadata="http://www.mulesoft.org/schema/mule/metadata" xmlns:json="http://www.mulesoft.org/schema/mule/json" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/ee/dw http://www.mulesoft.org/schema/mule/ee/dw/current/dw.xsd">
    <http:request-config name="HTTP_Compra_Request_Config" host="104.155.149.197" port="8090" doc:name="HTTP Request Configuration"/>
    <flow name="compraFlow">
        <set-payload value="#[payload]" encoding="UTF-8" mimeType="application/json" doc:name="Set Payload"/>
        <json:json-to-object-transformer returnClass="java.util.HashMap" encoding="UTF-8" doc:name="JSON to Object"/>
        <set-variable variableName="parameters" value="#[payload]" doc:name="parameters"/>
        <http:request config-ref="HTTP_Compra_Request_Config" path="tienda/zoho/searchCustomer" method="GET" doc:name="getCustomer">
            <http:request-builder>
                <http:uri-param paramName="mail" value="#[flowVars.parameters.userMail]"/>
            </http:request-builder>
        </http:request>
        <json:json-to-object-transformer returnClass="java.util.HashMap" encoding="UTF-8" doc:name="customerMap"/>
        <set-variable variableName="customerInformation" value="#[payload]" doc:name="customerInformation"/>
        <set-payload value="#[flowVars.parameters.products]" encoding="UTF-8" mimeType="application/json" doc:name="Set Payload"/>
        <set-variable variableName="products" value="#[new java.util.ArrayList()]" doc:name="Products" encoding="UTF-8" mimeType="application/java"/>
        <json:json-to-object-transformer returnClass="java.util.ArrayList" doc:name="JSON to Object"/>
        <foreach collection="#[payload]" doc:name="For Each">
            <json:json-to-object-transformer returnClass="java.util.HashMap" encoding="UTF-8" doc:name="Set Product"/>
            <http:request config-ref="HTTP_Compra_Request_Config" path="tienda/amazon/searchProduct/" method="GET" doc:name="SearchProduct">
                <http:request-builder>
                    <http:uri-param paramName="id" value="#[payload.productSKU]"/>
                </http:request-builder>
            </http:request>
            <expression-transformer doc:name="Agregar a la lista" expression="#[flowVars['products'].add(payload)]"/>
        </foreach>
        <set-payload value="#[flowVars.products]" encoding="UTF-8" mimeType="application/java" doc:name="Set Payload"/>
        <json:object-to-json-transformer encoding="UTF-8" mimeType="application/json" doc:name="Object to JSON"/>
        <dw:transform-message metadata:id="42c5792a-33c5-4a84-af33-905ccab38014" doc:name="setInvoiceInfo">
            <dw:input-payload mimeType="application/json"/>
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
{
	customer_id: flowVars.customerInformation.response.customer.identification.number,
	line_items: payload.products map ((product , indexOfProduct) -> {
		item_id: product.response.product.description.id as :number,
		name: product.response.product.description.name,
		description: product.response.product.description.description,
		item_order: 0,
		rate: product.response.product.price.price as :number,
		quantity: 1,
		unit: " ",
		discount: 0,
		item_total: 1
	})
}]]></dw:set-payload>
        </dw:transform-message>
        <http:request config-ref="HTTP_Compra_Request_Config" path="zoho/createInvoice" method="POST" doc:name="createInvoice"/>
        <dw:transform-message metadata:id="12631c45-ac89-4d6b-a094-f0420c7db44e" doc:name="setNotificationInfo">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
{
	notification: {
		customer: {
			social: {
				mail: flowVars.customerInformation.response.customer.social.mail,
				cellNumber: flowVars.customerInformation.response.customer.social.cellNumber
			}
		},
		message: {
			sender: "Tienda Comercio Team",
			text: "La compra ha sido realizada satisfactoriamente"
		}
	}
}]]></dw:set-payload>
        </dw:transform-message>
        <http:request config-ref="HTTP_Compra_Request_Config" path="/tienda/notification/send" method="POST" doc:name="notify"/>
    </flow>
</mule>
